/*
 * TaC IPL Source Code
 *    Tokuyama kousen Educational Computer 16bit Ver.
 *
 * Copyright (C) 2009-2017 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * util.cmm : TaC IPL 便利ルーチン
 *
 * 2017.05.11 v.4.0.0     : 新規作成
 *
 * $Id$
 *
 */

#include "crt0.h"
#include "util.h"

// メッセージの一致を調べる FSM
public boolean msgFSM(FSM fsm, char c) {
  int stat = fsm.stat;
  char[] msg = fsm.msg;
  if (c==msg[stat]) {                         // メッセージの次の文字とマッチ？
    stat = stat + 1;                          //   ステートを進める
    if (msg[stat]=='\0') {                    //   全文字がマッチした
      fsm.stat = 0;                           //     次回の使用に備えてクリア
      return true;                            //     マッチした
    }
    fsm.stat = stat;
  } else {                                    // マッチしない
    fsm.stat = 0;                             //   ステートを最初に戻す
  }
  return false;                               // まだマッチしない
}

// シリアルポートへの出力
public void putSIO(int port, char c) {
  while((in(port+2) & 0x80)==0)
    ;
  out(port, ord(c));
}

// 1文字出力
public void putch(char c) {
  if (c=='\n') putFT232('\r');
  putFT232(c);
  if ((in(0x2e) & 1)!=0) {                    // RN4020 が接続状態
    if (c=='\n') putRN4020('\r');
    putRN4020(c);
  }
}

// 文字列出力
public void putstr(char[] str) {
  for (int i=0; str[i]!='\0'; i=i+1)
    putch(str[i]);
}

// 16進数出力
char[] hstr = "0123456789abcdef";
public void _puthex(int x) {
  putch(hstr[(x>>12)&0x000f]);
  putch(hstr[(x>>8 )&0x000f]);
  putch(hstr[(x>>4 )&0x000f]);
  putch(hstr[(x    )&0x000f]);
}

