/*
 * TaC IPL Source Code
 *    Tokuyama kousen Educational Computer 16bit Ver.
 *
 * Copyright (C) 2009-2019 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * ipl.cmm : C-- 言語版の TaC IPL
 *
 * 2019.02.18           : TeCモードで起動時SETAが押されていればTacOSを起動する
 * 2019.02.10           : マイクロSDの挿入を確認してからブートする
 * 2019.02.03 v4.2.0    : TeCモードでSETAとRESETの同時押しでTacOSを起動する
 * 2018.10.26 v4.1.1    : DEMO1モードでTaCは単純なRN<=>FT中継機能
 *                        DEMO2とリセットモードTaCはポート操作もできる中継機能
 * 2018.07.13 v4.1.0    : RN4020のリセット用のモードを追加
 * 2017.12.15           : RN4020のリセット機能を追加
 * 2017.05.11 v4.0.0    : TaC7b 用に変更
 * 2016.01.10 v3.0.1    : メッセージ表示後止まるように変更
 * 2016.01.07 v3.0.0    : 川部版と統合
 * 2012.09.13 v2.0.0    : TaC-CPU V2 対応、"kernel.bin"ファイルをブートする
 * 2012.03.02 v1.0.0    : メッセージ等の調整
 * 2012.02.29           : TeC7 用に変更(uSD からブートする)
 * 2010.09.08           : 定数式を普通に書く(コンパイラの最適化にたよる)
 * 2010.07.20           : Subversion による管理を開始
 * 2010.07.16 v0.1.4    : Alternate Status のアドレスの間違え(一箇所)を修正
 * 2010.04.22           : ブート時のメッセージを変更
 * 2010.03.12 v0.1.3    : main, cls, ... に public 修飾を追加
 * 2009.06.12 v0.1.2    : reset ビット(nIEN)の位置の間違えを修正
 * 2009.05.13 v.0.1.1   : putch が \b, \t をサポート
 * 2009.04.10 v.0.1     : 宇野氏と相談しながら実用化
 * 2009.03.13 v.0.0     : 開発開始
 *
 * $Id$
 *
 */

#include "crt0.h"
#include "loader.h"
#include "util.h"

// TacOS をロードして起動する
void runOS() {
  putstr("Load kernel ... ");

  initLoader();                         // カーネルローダ初期化
  int addr = load("KERNEL  ", "BIN");   // "KERNEL.BIN" をロード

  putstr("(Start kernel@0x");
  _puthex( addr );
  putstr(")\n");
  jump(addr);
}

// TeC モードでは TaC が通信(TeC<=>FT232RL)を中継
void tecMode() {
  if ((in(0x36)&0x01)==0x01 &&                         // SETAが押されている
      (in(0x10)&0x01)==0x00) {                         //   カードが挿入済み
    runOS();                                           // TacOSを起動する
  }
  for (;;) {
    if ((in(0x0a) & 0x40)!=0) {                        // FT232RL
      int c = in(0x08);
      putTeC(chr(c));
    }
    if ((in(0x0e) & 0x40)!=0) {                        // TeC
      int c = in(0x0c);
      putFT232(chr(c));
    }
  }
}

// TaC モードでは TaC に tacOS をロードし全てを任せる
void tacMode() {
  while ((in(0x10)&0x01)==0x01) {                      // カード未挿入なら
    putstr("Please insert the card.\n");               //   メッセージを
    putstr("Push \"RESET\" to boot the kernel\n");     //     表示して
    while (true) {
      halt();                                          //   停止する
    }
  }
  runOS();                                             // TacOSを起動する
}

// DEMO1 モードでは TaC が通信(RN4020<=>FT232RL)を中継
void demo1Mode() {
  boolean esc = false;
  while(true) {
    if ((in(0x0a) & 0x40)!=0) {    // FT232RL
      int c = in(0x08);
      putRN4020(chr(c));
    }
    if ((in(0x2a) & 0x40)!=0) {    // RN4020
      int c = in(0x28);
      putFT232(chr(c));
    }
  }
}

// DEMO2 モードでは TaC が通信(RN4020<=>FT232RL)を中継
// （[ESC],[数字] でポートを上げ下げできる．）
void demo2Mode() {
  boolean esc = false;
  while(true) {
    if ((in(0x0a) & 0x40)!=0) { // FT232RL
      int c = in(0x08);
      if (esc) {                   // ESC の次の文字は
        out(0x2c, c);              //  RN4020の制御線に出力（下位3ビット有効）
	putFT232(chr(c));          //  動作状況が分かるようにエコーする
	esc = false;
      } else if (c==ord('\x1b')) { // ESC が入力された
        esc = true;
      } else {
        putRN4020(chr(c));
      }
    }
    if ((in(0x2a) & 0x40)!=0) {    // RN4020
      int c = in(0x28);
      putFT232(chr(c));
    }
  }
}

// RESET モードでは RN4020 を工場出荷時リセットする
void resetMode() {
  for(int i=0;i<10; i=i+1){
    out(0x2c, 7);
    putstr("reset now !!");        // 時間調整
    out(0x2c, 3);
    putstr("reset now !!");        // 時間調整
  }
}


// ここからスタート
public void main() {
  putstr("\nTaC Initial Program Loader Ver.");
  putstr( VER );
  putstr("\n" );
  putstr("(build date : ");
  putstr( DATE );
  putstr(")\n");
  putstr("Copyright(c) 2009-2019 Tokuyama College of Technology\n");
  putstr("All rights reserved.\n\n");

  int mode = in(0x1e);
  if (mode==0) tecMode();          // TeCモード：tecMode() は戻らない
  else if (mode==1) tacMode();     // TaCモード：tacMode() は戻らない
  else if (mode==2) demo1Mode();   // DEMO1モード：demo1Mode() は戻らない
  else if (mode==3) demo2Mode();   // DEMO2モード：demo2Mode() は戻らない
  else if (mode==7) {
    resetMode();                   // RESETモード：resetMode() は戻る
    demo2Mode();                   //              demo2Mode() は戻らない
  }

  while (true) {                   // ここまで来ないはず
      halt();                      // ここまで来たらTaCを停止する
  }
}
